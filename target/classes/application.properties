# Hibernate
hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
hibernate.show_sql: true
#hibernate.current_session_context_class: thread
hibernate.hbm2ddl.auto: validate
entitymanager.packagesToScan: com.shoppingCart.app.model
# ===============================
# = TOMCAT
# ===============================
server.tomcat.accesslog.enabled=true
server.port=9090
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
# ===============================
# = DATA SOURCE
# ===============================
#jdbc:postgres://<host(:port)>/<db-name>
spring.datasource.url = jdbc:mysql://localhost:3306/shopping_cart_db?useSSL=false
spring.datasource.username = root
spring.datasource.password = root
spring.datasource.driver-class-name= com.mysql.jdbc.Driver
#spring.datasource.tomcat.max-wait=10000
#spring.datasource.tomcat.max-active=5
#spring.datasource.tomcat.test-on-borrow=true

# ===============================
# = JPA / HIBERNATE
# =============================== 
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.show-sql = true
spring.jpa.generate-ddl=true

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update

#spring.jpa.properties.hibernate.default_schema=gmit

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

spring.mvc.view.prefix=/WEB-INF/
spring.mvc.view.suffix=.jsp